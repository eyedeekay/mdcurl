#! /usr/bin/env sh
md_url="$1"
whitelist_dl="$2"
working_dir="$3"
trimmed_url=$(echo $md_url | sed 's|http://||' | sed 's|https://||')
trimmed_path=$(dirname $trimmed_url)
if [ -z "$whitelist_dl" ]; then
        whitelist_dl="$trimmed_url"
fi
if [ -z "$working_dir" ]; then
        working_dir=$(pwd)
fi
trimmed_filename=$(basename $trimmed_url)

if [ ! -d "$working_dir/$trimmed_path" ]; then
        mkdir -p "$working_dir/$trimmed_path"
fi
page_body=$(curl -s "$md_url")

page_links=$(echo "$page_body" | \
  grep -o '<a href=['"'"'"][^"'"'"']*['"'"'"]' | \
  sed -e 's/^<a href=["'"'"']//' -e 's/["'"'"']$//')

if [ ! -f "$working_dir/$trimmed_path/$trimmed_filename.md" ]; then
        echo "$working_dir/$trimmed_path/$trimmed_filename"
        if [ $(echo "$page_body" | grep "404") ]; then
                echo "$page_body" | pandoc -f html -t markdown > "$working_dir/$trimmed_path/$trimmed_filename.md"
        fi

        for link in $page_links; do
                if [ $(echo "$link" | grep "://") ]; then
                        if [ $(echo "$link" | grep "$whitelist_dl") ]; then
                                mdcurl "$link" "$trimmed_url" "$working_dir"
                        else
                                trailing_links="$link"
                        fi
                else
                        reconstructed_url="https://$trimmed_path/$link"
                        mdcurl "$reconstructed_url" "$trimmed_url" "$working_dir"
                fi
        done

fi
